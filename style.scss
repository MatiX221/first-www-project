@use "sass:map";

// mixins

$breakpoints: (
    small: 40rem,
    medium: 60rem,
    large: 90rem,
);

@mixin mq($key) {
    $size: map.get($breakpoints, $key);

    @media screen and (min-width: $size) {
        @content;
    }
}

// properties

$transition: all 600ms -200ms ease-in-out;

/// light
$light-input-back: #ddd;
$light-input-color: #c2d16c;
$light-body-bg-clr: rgb(198, 228, 233);
$light-text-clr: #000;
$light-shadow: #000000;
$light-shadow-transparent: #00000019;
$light-card-bg-clr: #fff;

$root: (
    input-back: $light-input-back,
    input-color: $light-input-color,
    body-bg-clr: $light-body-bg-clr,
    text-clr: $light-text-clr,
    shadow: $light-shadow,
    shadow-transparent: $light-shadow-transparent,
    card-bg-clr: $light-card-bg-clr,
);

/// dark

$dark-input-back: #161616;
$dark-input-color: #294797;
$dark-body-bg-clr: rgb(16, 26, 39);
$dark-text-clr: #fff;
$dark-shadow: #ffffff;
$dark-shadow-transparent: #ffffff19;
$dark-card-bg-clr: #000;

$dark_mode: (
    input-back: $dark-input-back,
    input-color: $dark-input-color,
    body-bg-clr: $dark-body-bg-clr,
    text-clr: $dark-text-clr,
    shadow: $dark-shadow,
    shadow-transparent: $dark-shadow-transparent,
    card-bg-clr: $dark-card-bg-clr,
);

$iterator: 5;
$max-iteration: 10;

/* -better - darken in light mode / lighten in dark mode */
/* -worse - lighten in light mode / darken in dark mode */

:root {
    @each $name, $value in $root {
        --#{$name}: #{$value};
        $change-value: $iterator;
        @while $change-value <= $max-iteration {
            $light-value: lighten($value, $change-value);
            $dark-value: darken($value, $change-value);
            --#{$name}-better-#{$change-value}: #{$dark-value};
            --#{$name}-worse-#{$change-value}: #{$light-value};
            $change-value: $change-value + $iterator;
        }
    }
}

.dark_mode {
    @each $name, $value in $dark_mode {
        --#{$name}: #{$value};
        $change-value: $iterator;
        @while $change-value <= $max-iteration {
            $light-value: lighten($value, $change-value);
            $dark-value: darken($value, $change-value);
            --#{$name}-better-#{$change-value}: #{$light-value};
            --#{$name}-worse-#{$change-value}: #{$dark-value};
            $change-value: $change-value + $iterator;
        }
    }
}

// start of styles

*,
*::after,
*::before {
    box-sizing: border-box;
}

body {
    background-color: var(--body-bg-clr);
    color: var(--text-clr);
    transition: $transition;
    height: 100vh;
    width: 100vw;
    line-height: 1.4rem;
}

.page {
    display: flex;
    flex-direction: column;
    width: 100%;
    height: 100%;
}

.header {
    z-index: 2;
    display: flex;
    transition: $transition;
    box-shadow: 0 0 5px 1px var(--shadow);
    background-color: var(--body-bg-clr);
    .heading {
        transition: $transition;
        color: var(--text-clr);
        padding-left: 1rem;
        a {
            text-decoration: none;
            color: var(--text-clr);
        }
        h1 {
            transition: $transition;
        }
    }
}

#theme_changer {
    margin-inline: auto 1rem;
    margin-block: auto;
    padding: 1rem;
    &__label {
        width: 50px;
        height: 20px;
        position: relative;
        cursor: pointer;
        cursor: pointer;
    }
    .background {
        width: 50px;
        height: 20px;
        background-color: var(--input-back);
        border-radius: 30px;
    }
    .switch {
        box-shadow: 0 1px 3px 0 rgba(0, 0, 0, 0.1), 0 1px 2px 0 rgba(0, 0, 0, 0.06);
        height: 30px;
        width: 30px;
        background-color: var(--input-color);
        position: absolute;
        top: -5px;
        left: 0px;
        border-radius: 50%;
        transition: $transition;
        display: flex;
        justify-content: center;
        align-items: center;
        img {
            width: 60%;
            height: auto;
            position: absolute;
            transition: $transition;
        }
        transition: $transition;
        .sun {
            opacity: 1;
        }
        .moon {
            opacity: 0;
        }
    }
    input {
        transition: $transition;
        display: none;
        &:checked + .switch {
            left: 20px;
            .sun {
                opacity: 0;
            }
            .moon {
                opacity: 1;
            }
        }
    }
}

.footer {
    width: 100vw;
    padding: 0;
    margin-top: auto;
    background-color: var(--body-bg-clr);
    box-shadow: 0 0 5px 1px var(--shadow);
    transition: $transition;
    > * {
        transition: $transition;
        margin: 0;
        padding: 0.15rem 0.3rem;
    }
    p {
        color: var(--text-clr);
    }
}

.nav {
    height: 100%;
    margin-right: auto;
    margin-left: auto;
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    position: relative;
    cursor: pointer;
    &__logo {
        [noclick] {
            pointer-events: none;
        }
        svg {
            transition: $transition;
            fill: var(--text-clr);
            width: 50px;
            height: 50px;
        }
    }
    &__menu {
        background-color: var(--body-bg-clr);
        padding: 0 0.75rem;
        box-shadow: 0 0 5px 1px var(--shadow);
        pointer-events: none;
        transition: $transition;
        z-index: 1;
        display: unset;
        ul {
            transition: $transition;
            margin: 0;
            list-style-type: none;
            padding: 0;
            li {
                pointer-events: auto;
                height: 100%;
                cursor: pointer;
                transition: $transition;
                margin-block: 0.5rem;
                background-color: var(--body-bg-clr-better-10);
                border-radius: 0.7rem;
                padding: 0.5rem 1rem;
                &:hover {
                    transform: scale(1.1);
                }
                a {
                    transition: $transition;
                    pointer-events: auto;
                    display: block;
                    width: 100%;
                    height: 100%;
                    margin: 0;
                    padding: 0;
                    text-decoration: none;
                    color: var(--text-clr);
                }
            }
        }
        &[shown] {
            transform: translateY(0);
        }
        &[opening] {
            animation: nav_opening 500ms forwards;
        }
        &[closing] {
            animation: nav_closing 500ms forwards;
        }
        &[closed] {
            display: none;
        }
    }
    @include mq(small) {
        &__logo {
            display: none;
        }
        &__menu {
            &[closed] {
                display: unset;
            }
            ul {
                display: flex;
                flex-wrap: wrap;
                li {
                    margin-inline: 0.5rem;
                }
            }
        }
    }
}

.main {
    padding: 0 1rem 1.5rem 1rem;
    transition: $transition;
    &[opening] {
        animation: main_opening 500ms forwards;
    }
    &[closing] {
        animation: main_closing 500ms forwards;
    }
    p {
        transition: $transition;
    }
}

.logo {
    position: fixed;
    bottom: 35px;
    right: 0%;
    transform: rotate(-18deg);
    img {
        height: 1.5rem;
    }
}

.card {
    display: flex;
    position: relative;
    aspect-ratio: 276/155;
    height: 9rem;
    box-shadow: 0 0 5px 1px var(--shadow);
    margin: 1rem;
    &__container {
        height: 100%;
        width: 100%;
        transform-style: preserve-3d;
        transition: transform 500ms ease-in-out;
    }
    &:hover &__container {
        transform: rotateY(180deg);
    }
    a {
        perspective: 1000px;
        width: 100%;
        height: 100%;
        color: var(--text-clr);
        text-decoration: none;
    }
    &__grid {
        width: 100%;
        display: grid;
        justify-content: center;
        padding-top: 2rem;
        grid-template-columns: repeat(auto-fit, 300px);
    }
    &__photo,
    &__text {
        position: absolute;
        height: 100%;
        width: 100%;
        display: flex;
        flex-direction: column;
        justify-content: center;
        align-items: center;
    }
    &__photo {
        height: 100%;
        width: 100%;
        z-index: 2;
        backface-visibility: hidden;
        img {
            height: 100%;
            width: 100%;
        }
    }
    &__text {
        background-color: var(--card-bg-clr);
        z-index: 1;
        transform: rotateY(180deg);
    }
}

#current__page {
    pointer-events: none;
}

@keyframes nav_opening {
    0% {
        transform: translateY(-100%);
    }
    100% {
        transform: translateY(0);
    }
}

@keyframes nav_closing {
    0% {
        transform: translateY(0);
    }
    100% {
        transform: translateY(-100%);
    }
}

@keyframes main_opening {
    0% {
        transform: translateY(var(--menu-height));
    }
    100% {
        transform: translateY(0);
    }
}

@keyframes main_closing {
    0% {
        transform: translateY(0);
    }
    100% {
        transform: translateY(var(--menu-height));
    }
}
